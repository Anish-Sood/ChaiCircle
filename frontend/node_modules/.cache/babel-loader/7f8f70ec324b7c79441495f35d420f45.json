{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\future university\\\\test\\\\social-media-app\\\\frontend\\\\src\\\\components\\\\Feed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport Post from './Post';\nimport CreatePost from './CreatePost';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feed = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const {\n    token\n  } = useContext(AuthContext);\n  const fetchPosts = async () => {\n    try {\n      const response = await fetch('/api/posts');\n      const data = await response.json();\n      setPosts(data);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: [token && /*#__PURE__*/_jsxDEV(CreatePost, {\n      onPostCreated: fetchPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Feed, \"eY4RtfjtK2rJG7s+g2YDRk9lPls=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Post","CreatePost","AuthContext","jsxDEV","_jsxDEV","Feed","_s","posts","setPosts","token","fetchPosts","response","fetch","data","json","error","console","className","children","onPostCreated","fileName","_jsxFileName","lineNumber","columnNumber","map","post","_id","_c","$RefreshReg$"],"sources":["D:/Code/future university/test/social-media-app/frontend/src/components/Feed.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport Post from './Post';\nimport CreatePost from './CreatePost';\nimport { AuthContext } from '../context/AuthContext';\n\nconst Feed = () => {\n    const [posts, setPosts] = useState([]);\n    const { token } = useContext(AuthContext);\n\n    const fetchPosts = async () => {\n        try {\n            const response = await fetch('/api/posts');\n            const data = await response.json();\n            setPosts(data);\n        } catch (error) {\n            console.error('Error fetching posts:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchPosts();\n    }, []);\n\n    return (\n        <div className=\"feed\">\n            {token && <CreatePost onPostCreated={fetchPosts} />}\n            {posts.map(post => (\n                <Post key={post._id} post={post} />\n            ))}\n        </div>\n    );\n};\n\nexport default Feed;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEW;EAAM,CAAC,GAAGV,UAAU,CAACG,WAAW,CAAC;EAEzC,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;MAC1C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCN,QAAQ,CAACK,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACZa,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA;IAAKa,SAAS,EAAC,MAAM;IAAAC,QAAA,GAChBT,KAAK,iBAAIL,OAAA,CAACH,UAAU;MAACkB,aAAa,EAAET;IAAW;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAClDhB,KAAK,CAACiB,GAAG,CAACC,IAAI,iBACXrB,OAAA,CAACJ,IAAI;MAAgByB,IAAI,EAAEA;IAAK,GAArBA,IAAI,CAACC,GAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACjB,EAAA,CA1BID,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AA4BV,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}