{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\future university\\\\test\\\\social-media-app\\\\frontend\\\\src\\\\components\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport './CreatePost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePost = ({\n  onPostCreated\n}) => {\n  _s();\n  const [content, setContent] = useState('');\n  const [image, setImage] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const {\n    token\n  } = useContext(AuthContext);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!content.trim() || isSubmitting) return;\n    setIsSubmitting(true);\n    try {\n      const response = await fetch('/api/posts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          content: content.trim(),\n          image: image.trim()\n        })\n      });\n      if (response.ok) {\n        setIsSuccess(true);\n        setContent('');\n        setImage('');\n\n        // Show success state briefly\n        setTimeout(() => {\n          setIsSuccess(false);\n          if (onPostCreated) {\n            onPostCreated();\n          }\n        }, 1000);\n      } else {\n        throw new Error('Failed to create post');\n      }\n    } catch (error) {\n      console.error('Error creating post:', error);\n      alert('Failed to create post. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const getButtonText = () => {\n    if (isSuccess) return '✓ Posted!';\n    if (isSubmitting) return 'Posting...';\n    return 'Share Post';\n  };\n  const getButtonClass = () => {\n    let classes = '';\n    if (isSubmitting) classes += ' loading';\n    if (isSuccess) classes += ' success';\n    return classes;\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"create-post-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-field\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value),\n        placeholder: \"What's on your mind?\",\n        required: true,\n        rows: \"5\",\n        maxLength: \"500\",\n        disabled: isSubmitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-field\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        value: image,\n        onChange: e => setImage(e.target.value),\n        placeholder: \"Add an image URL (optional)\",\n        disabled: isSubmitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !content.trim() || isSubmitting,\n      className: getButtonClass(),\n      children: getButtonText()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(CreatePost, \"dZo8P8B9L1S2hOCYQFBGlIiNlPM=\");\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","useContext","AuthContext","jsxDEV","_jsxDEV","CreatePost","onPostCreated","_s","content","setContent","image","setImage","isSubmitting","setIsSubmitting","isSuccess","setIsSuccess","token","handleSubmit","e","preventDefault","trim","response","fetch","method","headers","body","JSON","stringify","ok","setTimeout","Error","error","console","alert","getButtonText","getButtonClass","classes","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","placeholder","required","rows","maxLength","disabled","type","_c","$RefreshReg$"],"sources":["D:/Code/future university/test/social-media-app/frontend/src/components/CreatePost.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport './CreatePost.css';\r\n\r\nconst CreatePost = ({ onPostCreated }) => {\r\n    const [content, setContent] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n    const { token } = useContext(AuthContext);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!content.trim() || isSubmitting) return;\r\n\r\n        setIsSubmitting(true);\r\n\r\n        try {\r\n            const response = await fetch('/api/posts', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({ content: content.trim(), image: image.trim() })\r\n            });\r\n\r\n            if (response.ok) {\r\n                setIsSuccess(true);\r\n                setContent('');\r\n                setImage('');\r\n                \r\n                // Show success state briefly\r\n                setTimeout(() => {\r\n                    setIsSuccess(false);\r\n                    if (onPostCreated) {\r\n                        onPostCreated();\r\n                    }\r\n                }, 1000);\r\n            } else {\r\n                throw new Error('Failed to create post');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error creating post:', error);\r\n            alert('Failed to create post. Please try again.');\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    const getButtonText = () => {\r\n        if (isSuccess) return '✓ Posted!';\r\n        if (isSubmitting) return 'Posting...';\r\n        return 'Share Post';\r\n    };\r\n\r\n    const getButtonClass = () => {\r\n        let classes = '';\r\n        if (isSubmitting) classes += ' loading';\r\n        if (isSuccess) classes += ' success';\r\n        return classes;\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"create-post-form\">\r\n            <h2>Create New Post</h2>\r\n            \r\n            <div className=\"form-field\">\r\n                <textarea\r\n                    value={content}\r\n                    onChange={(e) => setContent(e.target.value)}\r\n                    placeholder=\"What's on your mind?\"\r\n                    required\r\n                    rows=\"5\"\r\n                    maxLength=\"500\"\r\n                    disabled={isSubmitting}\r\n                />\r\n            </div>\r\n            \r\n            <div className=\"form-field\">\r\n                <input\r\n                    type=\"url\"\r\n                    value={image}\r\n                    onChange={(e) => setImage(e.target.value)}\r\n                    placeholder=\"Add an image URL (optional)\"\r\n                    disabled={isSubmitting}\r\n                />\r\n            </div>\r\n            \r\n            <button \r\n                type=\"submit\" \r\n                disabled={!content.trim() || isSubmitting}\r\n                className={getButtonClass()}\r\n            >\r\n                {getButtonText()}\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default CreatePost;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEgB;EAAM,CAAC,GAAGf,UAAU,CAACC,WAAW,CAAC;EAEzC,MAAMe,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACX,OAAO,CAACY,IAAI,CAAC,CAAC,IAAIR,YAAY,EAAE;IAErCC,eAAe,CAAC,IAAI,CAAC;IAErB,IAAI;MACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;QACvCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUR,KAAK;QACpC,CAAC;QACDS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEnB,OAAO,EAAEA,OAAO,CAACY,IAAI,CAAC,CAAC;UAAEV,KAAK,EAAEA,KAAK,CAACU,IAAI,CAAC;QAAE,CAAC;MACzE,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACO,EAAE,EAAE;QACbb,YAAY,CAAC,IAAI,CAAC;QAClBN,UAAU,CAAC,EAAE,CAAC;QACdE,QAAQ,CAAC,EAAE,CAAC;;QAEZ;QACAkB,UAAU,CAAC,MAAM;UACbd,YAAY,CAAC,KAAK,CAAC;UACnB,IAAIT,aAAa,EAAE;YACfA,aAAa,CAAC,CAAC;UACnB;QACJ,CAAC,EAAE,IAAI,CAAC;MACZ,CAAC,MAAM;QACH,MAAM,IAAIwB,KAAK,CAAC,uBAAuB,CAAC;MAC5C;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CE,KAAK,CAAC,0CAA0C,CAAC;IACrD,CAAC,SAAS;MACNpB,eAAe,CAAC,KAAK,CAAC;IAC1B;EACJ,CAAC;EAED,MAAMqB,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIpB,SAAS,EAAE,OAAO,WAAW;IACjC,IAAIF,YAAY,EAAE,OAAO,YAAY;IACrC,OAAO,YAAY;EACvB,CAAC;EAED,MAAMuB,cAAc,GAAGA,CAAA,KAAM;IACzB,IAAIC,OAAO,GAAG,EAAE;IAChB,IAAIxB,YAAY,EAAEwB,OAAO,IAAI,UAAU;IACvC,IAAItB,SAAS,EAAEsB,OAAO,IAAI,UAAU;IACpC,OAAOA,OAAO;EAClB,CAAC;EAED,oBACIhC,OAAA;IAAMiC,QAAQ,EAAEpB,YAAa;IAACqB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBACtDnC,OAAA;MAAAmC,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAExBvC,OAAA;MAAKkC,SAAS,EAAC,YAAY;MAAAC,QAAA,eACvBnC,OAAA;QACIwC,KAAK,EAAEpC,OAAQ;QACfqC,QAAQ,EAAG3B,CAAC,IAAKT,UAAU,CAACS,CAAC,CAAC4B,MAAM,CAACF,KAAK,CAAE;QAC5CG,WAAW,EAAC,sBAAsB;QAClCC,QAAQ;QACRC,IAAI,EAAC,GAAG;QACRC,SAAS,EAAC,KAAK;QACfC,QAAQ,EAAEvC;MAAa;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAENvC,OAAA;MAAKkC,SAAS,EAAC,YAAY;MAAAC,QAAA,eACvBnC,OAAA;QACIgD,IAAI,EAAC,KAAK;QACVR,KAAK,EAAElC,KAAM;QACbmC,QAAQ,EAAG3B,CAAC,IAAKP,QAAQ,CAACO,CAAC,CAAC4B,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC,6BAA6B;QACzCI,QAAQ,EAAEvC;MAAa;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAENvC,OAAA;MACIgD,IAAI,EAAC,QAAQ;MACbD,QAAQ,EAAE,CAAC3C,OAAO,CAACY,IAAI,CAAC,CAAC,IAAIR,YAAa;MAC1C0B,SAAS,EAAEH,cAAc,CAAC,CAAE;MAAAI,QAAA,EAE3BL,aAAa,CAAC;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEf,CAAC;AAACpC,EAAA,CA9FIF,UAAU;AAAAgD,EAAA,GAAVhD,UAAU;AAgGhB,eAAeA,UAAU;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}