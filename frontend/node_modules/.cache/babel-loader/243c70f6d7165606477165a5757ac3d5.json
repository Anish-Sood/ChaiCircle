{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\future university\\\\test\\\\social-media-app\\\\frontend\\\\src\\\\components\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FiHeart } from 'react-icons/fi';\nimport './Post.css';\n\n// Utility function to format timestamps\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatTimestamp = timestamp => {\n  const now = new Date();\n  const postDate = new Date(timestamp);\n  const diffInSeconds = Math.floor((now - postDate) / 1000);\n  if (diffInSeconds < 60) {\n    return 'Just now';\n  } else if (diffInSeconds < 3600) {\n    const minutes = Math.floor(diffInSeconds / 60);\n    return `${minutes}m ago`;\n  } else if (diffInSeconds < 86400) {\n    const hours = Math.floor(diffInSeconds / 3600);\n    return `${hours}h ago`;\n  } else if (diffInSeconds < 604800) {\n    const days = Math.floor(diffInSeconds / 86400);\n    return `${days}d ago`;\n  } else {\n    return postDate.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: postDate.getFullYear() !== now.getFullYear() ? 'numeric' : undefined\n    });\n  }\n};\nconst Post = ({\n  post\n}) => {\n  _s();\n  const [likes, setLikes] = useState(post.likes);\n  const [isLiked, setIsLiked] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleLike = async () => {\n    if (isLoading) return; // Prevent double clicks\n\n    setIsLoading(true);\n    try {\n      const response = await fetch(`/api/posts/${post._id}/like`, {\n        method: 'POST'\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Only update with server response, no optimistic updates\n        setLikes(data.likes);\n        // You could track liked state differently if needed\n      }\n    } catch (error) {\n      console.error('Error liking post:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.author.profile_picture || '/default-profile.png',\n        alt: post.author.name,\n        className: \"post-author-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-author-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"post-author-name\",\n          children: post.author.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"post-timestamp\",\n          children: formatTimestamp(post.created_at)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-content\",\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: post.image,\n      alt: \"\",\n      className: \"post-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLike,\n        className: `like-button ${isLiked ? 'liked' : ''}`,\n        disabled: isLoading,\n        children: [/*#__PURE__*/_jsxDEV(FiHeart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: likes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Post, \"RiGRs+p5niMTZM7f5kCGfCr0Enw=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","FiHeart","jsxDEV","_jsxDEV","formatTimestamp","timestamp","now","Date","postDate","diffInSeconds","Math","floor","minutes","hours","days","toLocaleDateString","month","day","year","getFullYear","undefined","Post","post","_s","likes","setLikes","isLiked","setIsLiked","isLoading","setIsLoading","handleLike","response","fetch","_id","method","data","json","ok","error","console","className","children","src","author","profile_picture","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","created_at","content","image","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/Code/future university/test/social-media-app/frontend/src/components/Post.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { FiHeart } from 'react-icons/fi';\nimport './Post.css';\n\n// Utility function to format timestamps\nconst formatTimestamp = (timestamp) => {\n    const now = new Date();\n    const postDate = new Date(timestamp);\n    const diffInSeconds = Math.floor((now - postDate) / 1000);\n    \n    if (diffInSeconds < 60) {\n        return 'Just now';\n    } else if (diffInSeconds < 3600) {\n        const minutes = Math.floor(diffInSeconds / 60);\n        return `${minutes}m ago`;\n    } else if (diffInSeconds < 86400) {\n        const hours = Math.floor(diffInSeconds / 3600);\n        return `${hours}h ago`;\n    } else if (diffInSeconds < 604800) {\n        const days = Math.floor(diffInSeconds / 86400);\n        return `${days}d ago`;\n    } else {\n        return postDate.toLocaleDateString('en-US', {\n            month: 'short',\n            day: 'numeric',\n            year: postDate.getFullYear() !== now.getFullYear() ? 'numeric' : undefined\n        });\n    }\n};\n\nconst Post = ({ post }) => {\n    const [likes, setLikes] = useState(post.likes);\n    const [isLiked, setIsLiked] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const handleLike = async () => {\n        if (isLoading) return; // Prevent double clicks\n        \n        setIsLoading(true);\n        \n        try {\n            const response = await fetch(`/api/posts/${post._id}/like`, {\n                method: 'POST',\n            });\n            const data = await response.json();\n            \n            if (response.ok) {\n                // Only update with server response, no optimistic updates\n                setLikes(data.likes);\n                // You could track liked state differently if needed\n            }\n        } catch (error) {\n            console.error('Error liking post:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"post-card\">\n            <div className=\"post-header\">\n                <img \n                    src={post.author.profile_picture || '/default-profile.png'} \n                    alt={post.author.name} \n                    className=\"post-author-img\"\n                />\n                <div className=\"post-author-info\">\n                    <span className=\"post-author-name\">{post.author.name}</span>\n                    <span className=\"post-timestamp\">{formatTimestamp(post.created_at)}</span>\n                </div>\n            </div>\n            <p className=\"post-content\">{post.content}</p>\n            {post.image && <img src={post.image} alt=\"\" className=\"post-image\" />}\n            <div className=\"post-actions\">\n                <button \n                    onClick={handleLike} \n                    className={`like-button ${isLiked ? 'liked' : ''}`}\n                    disabled={isLoading}\n                >\n                    <FiHeart />\n                    <span>{likes}</span>\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Post;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}