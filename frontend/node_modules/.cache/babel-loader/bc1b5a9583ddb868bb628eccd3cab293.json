{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\future university\\\\test\\\\social-media-app\\\\frontend\\\\src\\\\components\\\\UserPosts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Post from './Post';\nimport SkeletonPost from './SkeletonPost';\nimport './UserPosts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPosts = ({\n  userId,\n  isOwnProfile\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const fetchUserPosts = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch(`/api/posts/user/${userId}`);\n      if (response.ok) {\n        const data = await response.json();\n        setPosts(data);\n      } else {\n        setError('Failed to load posts');\n      }\n    } catch (error) {\n      console.error('Error fetching user posts:', error);\n      setError('Failed to load posts');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (userId) {\n      fetchUserPosts();\n    }\n  }, [userId]);\n  const handlePostDeleted = postId => {\n    setPosts(prevPosts => prevPosts.filter(post => post._id !== postId));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-posts\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-posts-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SkeletonPost, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SkeletonPost, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SkeletonPost, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-posts\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-posts-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-posts-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Posts (\", posts.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-posts\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: isOwnProfile ? \"You haven't posted anything yet.\" : \"This user hasn't posted anything yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-list\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        post: post,\n        onPostDeleted: handlePostDeleted\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(UserPosts, \"ok8foY8gcvyzARQ2tOEX9/uHXPU=\");\n_c = UserPosts;\nexport default UserPosts;\nvar _c;\n$RefreshReg$(_c, \"UserPosts\");","map":{"version":3,"names":["React","useEffect","useState","Post","SkeletonPost","jsxDEV","_jsxDEV","UserPosts","userId","isOwnProfile","_s","posts","setPosts","loading","setLoading","error","setError","fetchUserPosts","response","fetch","ok","data","json","console","handlePostDeleted","postId","prevPosts","filter","post","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onPostDeleted","_c","$RefreshReg$"],"sources":["D:/Code/future university/test/social-media-app/frontend/src/components/UserPosts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Post from './Post';\r\nimport SkeletonPost from './SkeletonPost';\r\nimport './UserPosts.css';\r\n\r\nconst UserPosts = ({ userId, isOwnProfile }) => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n\r\n    const fetchUserPosts = async () => {\r\n        setLoading(true);\r\n        setError('');\r\n        try {\r\n            const response = await fetch(`/api/posts/user/${userId}`);\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setPosts(data);\r\n            } else {\r\n                setError('Failed to load posts');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching user posts:', error);\r\n            setError('Failed to load posts');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (userId) {\r\n            fetchUserPosts();\r\n        }\r\n    }, [userId]);\r\n\r\n    const handlePostDeleted = (postId) => {\r\n        setPosts(prevPosts => prevPosts.filter(post => post._id !== postId));\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"user-posts\">\r\n                <div className=\"user-posts-header\">\r\n                    <h3>Posts</h3>\r\n                </div>\r\n                <SkeletonPost />\r\n                <SkeletonPost />\r\n                <SkeletonPost />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"user-posts\">\r\n                <div className=\"user-posts-header\">\r\n                    <h3>Posts</h3>\r\n                </div>\r\n                <div className=\"error-message\">{error}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"user-posts\">\r\n            <div className=\"user-posts-header\">\r\n                <h3>Posts ({posts.length})</h3>\r\n            </div>\r\n            {posts.length === 0 ? (\r\n                <div className=\"no-posts\">\r\n                    <p>{isOwnProfile ? \"You haven't posted anything yet.\" : \"This user hasn't posted anything yet.\"}</p>\r\n                </div>\r\n            ) : (\r\n                <div className=\"posts-list\">\r\n                    {posts.map(post => (\r\n                        <Post \r\n                            key={post._id} \r\n                            post={post} \r\n                            onPostDeleted={handlePostDeleted}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserPosts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}