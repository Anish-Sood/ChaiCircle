{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\future university\\\\test\\\\social-media-app\\\\frontend\\\\src\\\\components\\\\UserPosts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport Post from './Post';\nimport SkeletonPost from './SkeletonPost';\nimport './UserPosts.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserPosts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const {\n    token\n  } = useContext(AuthContext);\n  const fetchUserPosts = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/posts/my-posts', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch posts');\n      }\n      const data = await response.json();\n      setPosts(data);\n    } catch (err) {\n      setError('Failed to load your posts');\n      console.error('Error fetching user posts:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (token) {\n      fetchUserPosts();\n    }\n  }, [token]);\n  const handlePostDeleted = postId => {\n    setPosts(prevPosts => prevPosts.filter(post => post._id !== postId));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"posts-section-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"posts-section-title\",\n          children: \"Your Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SkeletonPost, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SkeletonPost, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"posts-section-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"posts-section-title\",\n          children: \"Your Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-posts-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-section-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"posts-section-title\",\n        children: [\"Your Posts\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"posts-count-badge\",\n          children: posts.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-posts-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You haven't created any posts yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click the \\\"Create\\\" button in the sidebar to share your first post!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-feed\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        post: post,\n        onPostDeleted: handlePostDeleted\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(UserPosts, \"gYAbCSRWmgLJyfzRsHJtoWidU9Y=\");\n_c = UserPosts;\nexport default UserPosts;\nvar _c;\n$RefreshReg$(_c, \"UserPosts\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","Post","SkeletonPost","jsxDEV","_jsxDEV","Fragment","_Fragment","UserPosts","_s","posts","setPosts","loading","setLoading","error","setError","token","fetchUserPosts","response","fetch","headers","ok","Error","data","json","err","console","handlePostDeleted","postId","prevPosts","filter","post","_id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onPostDeleted","_c","$RefreshReg$"],"sources":["D:/Code/future university/test/social-media-app/frontend/src/components/UserPosts.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport Post from './Post';\r\nimport SkeletonPost from './SkeletonPost';\r\nimport './UserPosts.css';\r\n\r\nconst UserPosts = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const { token } = useContext(AuthContext);\r\n\r\n    const fetchUserPosts = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch('/api/posts/my-posts', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            });\r\n            \r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch posts');\r\n            }\r\n            \r\n            const data = await response.json();\r\n            setPosts(data);\r\n        } catch (err) {\r\n            setError('Failed to load your posts');\r\n            console.error('Error fetching user posts:', err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            fetchUserPosts();\r\n        }\r\n    }, [token]);\r\n\r\n    const handlePostDeleted = (postId) => {\r\n        setPosts(prevPosts => prevPosts.filter(post => post._id !== postId));\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <>\r\n                <div className=\"posts-section-header\">\r\n                    <h3 className=\"posts-section-title\">Your Posts</h3>\r\n                </div>\r\n                <SkeletonPost />\r\n                <SkeletonPost />\r\n            </>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <>\r\n                <div className=\"posts-section-header\">\r\n                    <h3 className=\"posts-section-title\">Your Posts</h3>\r\n                </div>\r\n                <div className=\"user-posts-error\">{error}</div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"posts-section-header\">\r\n                <h3 className=\"posts-section-title\">\r\n                    Your Posts\r\n                    <span className=\"posts-count-badge\">{posts.length}</span>\r\n                </h3>\r\n            </div>\r\n            \r\n            {posts.length === 0 ? (\r\n                <div className=\"no-posts-message\">\r\n                    <p>You haven't created any posts yet.</p>\r\n                    <p>Click the \"Create\" button in the sidebar to share your first post!</p>\r\n                </div>\r\n            ) : (\r\n                <div className=\"posts-feed\">\r\n                    {posts.map(post => (\r\n                        <Post \r\n                            key={post._id} \r\n                            post={post} \r\n                            onPostDeleted={handlePostDeleted}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserPosts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}