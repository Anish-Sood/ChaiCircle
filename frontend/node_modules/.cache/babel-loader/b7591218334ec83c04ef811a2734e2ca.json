{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\future university\\\\test\\\\social-media-app\\\\frontend\\\\src\\\\components\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FiHeart } from 'react-icons/fi';\nimport './Post.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = ({\n  post\n}) => {\n  _s();\n  const [likes, setLikes] = useState(post.likes);\n  const [isLiked, setIsLiked] = useState(false);\n  const handleLike = async () => {\n    const newLikes = isLiked ? likes - 1 : likes + 1;\n    setLikes(newLikes);\n    setIsLiked(!isLiked);\n    const response = await fetch(`/api/posts/${post._id}/like`, {\n      method: 'POST'\n    });\n    const data = await response.json();\n    if (response.ok) {\n      // Update with the actual count from the server\n      setLikes(data.likes);\n    } else {\n      // Revert on error\n      setLikes(likes);\n      setIsLiked(isLiked);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.author.profile_picture || '/default-profile.png',\n        alt: post.author.name,\n        className: \"post-author-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"post-author-name\",\n        children: post.author.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-content\",\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: post.image,\n      alt: \"\",\n      className: \"post-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLike,\n        className: `like-button ${isLiked ? 'liked' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(FiHeart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: likes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Post, \"VpIlsTVfZHJu1zg5roFxQcUbzm4=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","FiHeart","jsxDEV","_jsxDEV","Post","post","_s","likes","setLikes","isLiked","setIsLiked","handleLike","newLikes","response","fetch","_id","method","data","json","ok","className","children","src","author","profile_picture","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","content","image","onClick","_c","$RefreshReg$"],"sources":["D:/Code/future university/test/social-media-app/frontend/src/components/Post.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { FiHeart } from 'react-icons/fi';\nimport './Post.css';\n\nconst Post = ({ post }) => {\n    const [likes, setLikes] = useState(post.likes);\n    const [isLiked, setIsLiked] = useState(false);\n\n    const handleLike = async () => {\n        const newLikes = isLiked ? likes - 1 : likes + 1;\n        setLikes(newLikes);\n        setIsLiked(!isLiked);\n\n        const response = await fetch(`/api/posts/${post._id}/like`, {\n            method: 'POST',\n        });\n        const data = await response.json();\n        if (response.ok) {\n            // Update with the actual count from the server\n            setLikes(data.likes);\n        } else {\n            // Revert on error\n            setLikes(likes);\n            setIsLiked(isLiked);\n        }\n    };\n\n    return (\n        <div className=\"post-card\">\n            <div className=\"post-header\">\n                <img \n                    src={post.author.profile_picture || '/default-profile.png'} \n                    alt={post.author.name} \n                    className=\"post-author-img\"\n                />\n                <span className=\"post-author-name\">{post.author.name}</span>\n            </div>\n            <p className=\"post-content\">{post.content}</p>\n            {post.image && <img src={post.image} alt=\"\" className=\"post-image\" />}\n            <div className=\"post-actions\">\n                <button \n                    onClick={handleLike} \n                    className={`like-button ${isLiked ? 'liked' : ''}`}\n                >\n                    <FiHeart />\n                    <span>{likes}</span>\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Post;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,gBAAgB;AACxC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACK,IAAI,CAACE,KAAK,CAAC;EAC9C,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,QAAQ,GAAGH,OAAO,GAAGF,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAG,CAAC;IAChDC,QAAQ,CAACI,QAAQ,CAAC;IAClBF,UAAU,CAAC,CAACD,OAAO,CAAC;IAEpB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAcT,IAAI,CAACU,GAAG,OAAO,EAAE;MACxDC,MAAM,EAAE;IACZ,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,IAAIL,QAAQ,CAACM,EAAE,EAAE;MACb;MACAX,QAAQ,CAACS,IAAI,CAACV,KAAK,CAAC;IACxB,CAAC,MAAM;MACH;MACAC,QAAQ,CAACD,KAAK,CAAC;MACfG,UAAU,CAACD,OAAO,CAAC;IACvB;EACJ,CAAC;EAED,oBACIN,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBlB,OAAA;MAAKiB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxBlB,OAAA;QACImB,GAAG,EAAEjB,IAAI,CAACkB,MAAM,CAACC,eAAe,IAAI,sBAAuB;QAC3DC,GAAG,EAAEpB,IAAI,CAACkB,MAAM,CAACG,IAAK;QACtBN,SAAS,EAAC;MAAiB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACF3B,OAAA;QAAMiB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAEhB,IAAI,CAACkB,MAAM,CAACG;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eACN3B,OAAA;MAAGiB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEhB,IAAI,CAAC0B;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7CzB,IAAI,CAAC2B,KAAK,iBAAI7B,OAAA;MAAKmB,GAAG,EAAEjB,IAAI,CAAC2B,KAAM;MAACP,GAAG,EAAC,EAAE;MAACL,SAAS,EAAC;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrE3B,OAAA;MAAKiB,SAAS,EAAC,cAAc;MAAAC,QAAA,eACzBlB,OAAA;QACI8B,OAAO,EAAEtB,UAAW;QACpBS,SAAS,EAAE,eAAeX,OAAO,GAAG,OAAO,GAAG,EAAE,EAAG;QAAAY,QAAA,gBAEnDlB,OAAA,CAACF,OAAO;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACX3B,OAAA;UAAAkB,QAAA,EAAOd;QAAK;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACxB,EAAA,CA9CIF,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAgDV,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}